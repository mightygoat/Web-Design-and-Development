/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Continent.Continent;
import Business.Continent.ContinentDirectory;
import Business.Country.Country;
import Business.Country.CountryDirectory;
import Business.CountryHead.CountryHead;
import Business.Employee.Employee;
import Business.Role.Role;
import Business.EcoSystem.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 
 */
public class CreateHeadJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    
    /**
     * Creates new form ManageOrganizationJPanel
     * @param userProcessContainer
     * @param countryDirectory
     */
    public CreateHeadJPanel(JPanel userProcessContainer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        
        populateContinentComboBox();
        populateTable(EcoSystem.getInstance().getContinentDirectory());
        
        countryJComboBox.setEnabled(false);
        countryJComboBox.setEditable(false);
        countryJComboBox.setVisible(false);
        
        continentJComboBox.setEnabled(false);
        continentJComboBox.setEditable(false);
        continentJComboBox.setVisible(false);
    }
    
    public void populateCountryComboBox(Continent continent){
        countryJComboBox.removeAllItems();
        
        for (Country country : continent.getCountryDirectory().getCountryList()){
            countryJComboBox.addItem(country);
        }
    }
    
    public void populateContinentComboBox(){
        for (Continent continent: EcoSystem.getInstance().getContinentDirectory().
                getContinents()){
            continentJComboBox.addItem(continent);
        }
    }

    
    private void populateTable(ContinentDirectory continentDirectory){
        DefaultTableModel model = (DefaultTableModel) countryJTable.getModel();
        model.setRowCount(0);
        for(Continent continent : continentDirectory.getContinents()) {
            for (Country country : continent.getCountryDirectory().getCountryList()){
                Object[] row = new Object[3];
                if(country.getCountryHead() != null) {
                    CountryHead countryHead = country.getCountryHead();
                    row[0] = countryHead;
                    row[1] = countryHead.getLastName();
                    row[2] = countryHead.getCountryOfBirth().getName();
                    model.addRow(row);
                }
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        countryJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        organizationLabel = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        firstNameJTextField = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        lastNameJTextField = new javax.swing.JTextField();
        countryLabel = new javax.swing.JLabel();
        countryJComboBox = new javax.swing.JComboBox();
        lastNameLabel = new javax.swing.JLabel();
        continentJComboBox = new javax.swing.JComboBox();
        countryLabel1 = new javax.swing.JLabel();
        lastNameLabel1 = new javax.swing.JLabel();
        dateJTextField = new javax.swing.JTextField();
        Male = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        Female = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        usernameTextField = new javax.swing.JTextField();

        countryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(countryJTable);
        if (countryJTable.getColumnModel().getColumnCount() > 0) {
            countryJTable.getColumnModel().getColumn(0).setResizable(false);
            countryJTable.getColumnModel().getColumn(1).setResizable(false);
            countryJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        addJButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        addJButton.setText("Create");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "United Nations", "Country" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        organizationLabel.setText("Organization:");

        backJButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        firstNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameJTextFieldActionPerformed(evt);
            }
        });

        firstNameLabel.setText("First Name:");

        lastNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameJTextFieldActionPerformed(evt);
            }
        });

        countryLabel.setText("Country:");

        countryJComboBox.setMaximumRowCount(200);
        countryJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryJComboBoxActionPerformed(evt);
            }
        });

        lastNameLabel.setText("Last Name:");

        continentJComboBox.setMaximumRowCount(200);
        continentJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continentJComboBoxActionPerformed(evt);
            }
        });

        countryLabel1.setText("Continent:");

        lastNameLabel1.setText("Date:");

        dateJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateJTextFieldActionPerformed(evt);
            }
        });

        Male.setText("Male");
        Male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaleActionPerformed(evt);
            }
        });

        jLabel4.setText("Gender:");

        Female.setText("Female");

        jLabel7.setText("Username:");

        jLabel8.setText("Password:");

        passwordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextFieldActionPerformed(evt);
            }
        });

        usernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lastNameLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                        .addGap(485, 485, 485))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(lastNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(dateJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                                    .addComponent(lastNameJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstNameJTextField, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(organizationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(countryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(countryLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(countryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(continentJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(Male)
                                .addGap(29, 29, 29)
                                .addComponent(Female))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(passwordTextField)
                                    .addComponent(usernameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {countryLabel, firstNameLabel, lastNameLabel, organizationLabel});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organizationLabel)
                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(continentJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryLabel)
                    .addComponent(countryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastNameJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Male)
                    .addComponent(Female))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(addJButton))
                .addGap(31, 31, 31))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {countryLabel, firstNameLabel, lastNameLabel, organizationLabel});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {firstNameJTextField, lastNameJTextField});

    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        String firstName = firstNameJTextField.getText();
        String lastName = lastNameJTextField.getText();
        Date date = new Date();
        String username = usernameTextField.getText();
        
        char[] passwordCharArray = passwordTextField.getPassword();
        String password = String.valueOf(passwordCharArray);
        
        int continentIndex = continentJComboBox.getSelectedIndex();
        int countryIndex = countryJComboBox.getSelectedIndex();
        
        if(!firstNameJTextField.getText().trim().isEmpty() &&
            !lastNameJTextField.getText().trim().isEmpty()) {
            CountryHead countryHead = new CountryHead();
            countryHead.setFirstName(firstName);
            countryHead.setLastName(lastName);
            Country country = EcoSystem.getInstance().getContinentDirectory().
                    getContinents().get(continentIndex).
            getCountryDirectory().getCountryList().get(countryIndex);
            countryHead.setCountryOfBirth(country);
            country.setCountryHead(countryHead);
            if(country == null) {
                System.out.println("Country is null");
            }
            if(country.getUserAccountDirectory() == null) {
                System.out.println("Country User Directory is null");
            }
            Employee employee = new Employee();
            employee = (Employee)countryHead;
            country.getUserAccountDirectory().
                    createUserAccount(username, password, employee, 
                            country.getSupportedRole().get(0));
            
            for(UserAccount ua :country.getUserAccountDirectory().getUserAccountList()) {
                System.out.println(ua.getUsername());
            }
            firstNameJTextField.setText("");
            lastNameJTextField.setText("");
        }
        
        //System.out.println(country.getCountryHead());
        
        populateTable(EcoSystem.getInstance().getContinentDirectory());
    }//GEN-LAST:event_addJButtonActionPerformed

    
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        switch(organizationJComboBox.getSelectedIndex()) {
            case 0:
                countryJComboBox.setEnabled(false);
                countryJComboBox.setEditable(false);
                continentJComboBox.setEnabled(false);
                continentJComboBox.setEditable(false);
                continentJComboBox.setVisible(false);
                break;
            case 1:
                countryJComboBox.setEnabled(true);
                countryJComboBox.setEditable(true);
                countryJComboBox.setVisible(true);
                continentJComboBox.setEnabled(true);
                continentJComboBox.setEditable(true);
                continentJComboBox.setVisible(true);
                break;
            default:
                countryJComboBox.setEnabled(false);
                countryJComboBox.setEditable(false);
                continentJComboBox.setEnabled(false);
                continentJComboBox.setEditable(false);
                continentJComboBox.setVisible(false);
                break;
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    
    
    
    private void firstNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameJTextFieldActionPerformed

    private void lastNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameJTextFieldActionPerformed

    private void countryJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryJComboBoxActionPerformed
        
    }//GEN-LAST:event_countryJComboBoxActionPerformed

    private void continentJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continentJComboBoxActionPerformed
        // TODO add your handling code here:
        int index = continentJComboBox.getSelectedIndex();
        Continent continent = EcoSystem.getInstance().getContinentDirectory().
                getContinents().get(index);
        populateCountryComboBox(continent);
    }//GEN-LAST:event_continentJComboBoxActionPerformed

    private void dateJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateJTextFieldActionPerformed

    private void MaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MaleActionPerformed

    private void passwordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextFieldActionPerformed

    private void usernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Female;
    private javax.swing.JRadioButton Male;
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox continentJComboBox;
    private javax.swing.JComboBox countryJComboBox;
    private javax.swing.JTable countryJTable;
    private javax.swing.JLabel countryLabel;
    private javax.swing.JLabel countryLabel1;
    private javax.swing.JTextField dateJTextField;
    private javax.swing.JTextField firstNameJTextField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameJTextField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JLabel lastNameLabel1;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JLabel organizationLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
