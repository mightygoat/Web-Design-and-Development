/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Continent.Continent;
import Business.Continent.ContinentDirectory;
import Business.Country.Country;
import Business.Department.Department;
import Business.Department.DepartmentDirectory;
import Business.Employee.Employee;
import Business.Person.Gender;
import Business.Role.AdminRole;
import Business.Role.CountryHeadRole;
import Business.Role.DeptHeadRole;
import Business.Role.DoctorRole;
import Business.Role.Role;
import Business.Role.Role.RoleType;
import Business.Role.TeacherRole;
import Business.EcoSystem.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 
 */
public class ManageEmployeeJPanel extends JPanel {

    private DepartmentDirectory departmentDirectory;
    private JPanel userProcessContainer;
    private EcoSystem unitedNations;
    private ContinentDirectory continentDirectory;
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageEmployeeJPanel(JPanel userProcessContainer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        unitedNations = EcoSystem.getInstance();
        continentDirectory = unitedNations.getContinentDirectory();
        
        departmentJComboBox.setEnabled(false);
        departmentJComboBox.setEditable(false);
        departmentJComboBox.setVisible(false);
        
        countryJComboBox.setEnabled(false);
        countryJComboBox.setEditable(false);
        countryJComboBox.setVisible(false);
        
        
        //populateCountryComboBox();
        populateContinentsComboBox();
    }
    
    public void populateContinentsComboBox() {
        for (Continent continent: continentDirectory.getContinents()){            
            continentComboBox.addItem(continent);
        }
    }
    
    public void populateDepartmentComboBox(Country country){
        departmentJComboBox.removeAllItems();
        if(country == null) {
            System.out.println("Country is null");
        }
        for (Department department : country.getCabinetMinistry().
                getDepartmentDirectory().getDepartmentList()){
            
            departmentJComboBox.addItem(department);
        }
    }

    public void populateCountryComboBox(Continent continent){
        countryJComboBox.removeAllItems();
        for (Country country : continent.getCountryDirectory().getCountryList()){
            countryJComboBox.addItem(country);
        }
    }
    
    public void populateRoleComboBox(Department department) {
        roleComboBox.removeAllItems();
        if(department != null) {
            for (Role role : department.getSupportedRole()){
                roleComboBox.addItem(role);
            }
        }
        
    }

    private void populateTable(Department department){
        DefaultTableModel model = (DefaultTableModel) departmentJTable.getModel();
        
        model.setRowCount(0);
        for (Employee employee : department.getEmployeeDirectory().getEmployeeList()){
            Object[] row = new Object[3];
            row[0] = employee;
            row[1] = employee.getId();
            row[2] = employee.getFirstName() + employee.getLastName();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        departmentJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        departmentJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        firstNameJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        countryComboBoxOld = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        lastNameTxtField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        roleComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        continentComboBox = new javax.swing.JComboBox();
        countryJComboBox = new javax.swing.JComboBox();
        lastNameLabel1 = new javax.swing.JLabel();
        dateofBirthJTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        maleButton = new javax.swing.JRadioButton();
        femaleBUtton = new javax.swing.JRadioButton();
        usernameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        departmentJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "First Name", "Last Name", "Department"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(departmentJTable);
        if (departmentJTable.getColumnModel().getColumnCount() > 0) {
            departmentJTable.getColumnModel().getColumn(0).setResizable(false);
            departmentJTable.getColumnModel().getColumn(1).setResizable(false);
            departmentJTable.getColumnModel().getColumn(2).setResizable(false);
            departmentJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        addJButton.setText("Create Employee");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        departmentJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Human Resource Department", "Employment Department", "Education Department", "Health Department" }));
        departmentJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentJComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Department");

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("First Name:");

        firstNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameJTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Country:");

        countryComboBoxOld.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countryComboBoxOld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryComboBoxOldActionPerformed(evt);
            }
        });

        jLabel3.setText("Last Name:");

        lastNameTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameTxtFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Role: ");

        roleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("Continent:");

        jLabel7.setText("Country:");

        continentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continentComboBoxActionPerformed(evt);
            }
        });

        countryJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryJComboBoxActionPerformed(evt);
            }
        });

        lastNameLabel1.setText("Date of Birth:");

        dateofBirthJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateofBirthJTextFieldActionPerformed(evt);
            }
        });

        jLabel8.setText("Gender:");

        buttonGroup1.add(maleButton);
        maleButton.setText("Male");
        maleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(femaleBUtton);
        femaleBUtton.setText("Female");

        passwordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextFieldActionPerformed(evt);
            }
        });

        jLabel9.setText("Password:");

        jLabel10.setText("Username:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(backJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addJButton)
                .addGap(120, 120, 120))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(94, 94, 94)
                                            .addComponent(maleButton)
                                            .addGap(29, 29, 29)
                                            .addComponent(femaleBUtton))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(158, 158, 158)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(departmentJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lastNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel9))
                                            .addGap(95, 95, 95)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5)
                                            .addComponent(lastNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(79, 79, 79)
                                        .addComponent(dateofBirthJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel4)
                        .addGap(50, 50, 50)
                        .addComponent(countryComboBoxOld, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(continentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(countryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(countryComboBoxOld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(continentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departmentJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateofBirthJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(maleButton)
                    .addComponent(femaleBUtton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(addJButton))
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
       
        Department department = (Department) departmentJComboBox.getSelectedItem();
        String firstName = firstNameJTextField.getText();
        String lastName = lastNameTxtField.getText();
        String dateOfBirth = dateofBirthJTextField.getText();
        
        Date date  = new Date();
        String username = usernameTextField.getText();
        char[] passwordCharArray = passwordTextField.getPassword();
        String password = String.valueOf(passwordCharArray);
        
        Employee employee = department.getEmployeeDirectory().createEmployee();
        employee.setFirstName(firstName);
        employee.setLastName(lastName);
        employee.setDateOfBirth(date);
        
        employee.setGender(maleButton.isSelected() ? Gender.MALE : Gender.FEMALE);
        employee.setCountryOfBirth((Country)countryJComboBox.getSelectedItem());
        
        UserAccount userAccount = department.getUserAccountDirectory().createUserAccount(
                username, password, employee,(Role)department.getSupportedRole().get(0));
        userAccount.setEmployee(employee);
        
        populateTable(department);
    }//GEN-LAST:event_addJButtonActionPerformed

    private Role getRole(RoleType roleType) {
        switch(roleType) {
            case Admin:
                return new AdminRole();
            case CountryHeadRole:
                return new CountryHeadRole();
                
            case DeptHead:
                return new DeptHeadRole();
                
            case Doctor:
                return new DoctorRole();
                
            case DoctorAssistant:
                return new DoctorRole();
                
            case EducationDeptAdmin:
                return new TeacherRole();
            default:
                return null;
                
        }
    }
    
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void departmentJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentJComboBoxActionPerformed
        Department department = (Department) departmentJComboBox.getSelectedItem();
        populateRoleComboBox(department);
        if (department != null){
            populateTable(department);
        }
    }//GEN-LAST:event_departmentJComboBoxActionPerformed

    private void firstNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameJTextFieldActionPerformed

    private void countryComboBoxOldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryComboBoxOldActionPerformed
        Country country = (Country)countryJComboBox.getSelectedItem();
       // populateDepartmentComboBox(country);
    }//GEN-LAST:event_countryComboBoxOldActionPerformed

    private void lastNameTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameTxtFieldActionPerformed

    private void dateofBirthJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateofBirthJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateofBirthJTextFieldActionPerformed

    private void maleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleButtonActionPerformed

    private void passwordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextFieldActionPerformed

    private void countryJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryJComboBoxActionPerformed
        // TODO add your handling code here:
        if(countryJComboBox.getSelectedIndex() >= 0) {
            
            departmentJComboBox.setEnabled(true);
            departmentJComboBox.setEditable(true);
            departmentJComboBox.setVisible(true);
            
            Country country = (Country)countryJComboBox.getSelectedItem();
            populateDepartmentComboBox(country);
            System.out.println(country.getName());
        } else {
            System.out.println("-1 index");
        }
        
        //populateDepartmentComboBox(country);
    }//GEN-LAST:event_countryJComboBoxActionPerformed

    private void continentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continentComboBoxActionPerformed
        // TODO add your handling code here:
        populateCountryComboBox((Continent)continentComboBox.getSelectedItem());
        
        countryJComboBox.setEnabled(true);
        countryJComboBox.setEditable(true);
        countryJComboBox.setVisible(true);
        //populateDepartmentComboBox((Country)countryJComboBox.getSelectedItem());
    }//GEN-LAST:event_continentComboBoxActionPerformed

    private void roleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleComboBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_roleComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox continentComboBox;
    private javax.swing.JComboBox countryComboBoxOld;
    private javax.swing.JComboBox countryJComboBox;
    private javax.swing.JTextField dateofBirthJTextField;
    private javax.swing.JComboBox departmentJComboBox;
    private javax.swing.JTable departmentJTable;
    private javax.swing.JRadioButton femaleBUtton;
    private javax.swing.JTextField firstNameJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastNameLabel1;
    private javax.swing.JTextField lastNameTxtField;
    private javax.swing.JRadioButton maleButton;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JComboBox roleComboBox;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
